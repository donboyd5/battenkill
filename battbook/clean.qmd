# Data cleaning

```{r}
source(here::here("r", "libraries.r"))

bkill1 <- readRDS(here::here("data", "bkill_raw.rds"))

# duplicated(blockBinding()# duplicated(bkill1$locdesc)
```

## Cleaning latitude and longitude

Several of the VFWD sites appear to have latitude or longitude miscoded. I determined that by looking up their locations on a map (with Google Maps) using their stated lat-long values and comparing these to the location names in the data file. Based on this, I concluded that:

-   Site id 502377, White Creek Rt 153 bridge, with stated lat, long of (42.2363891, -73.2436065) should have latitude start with 43, not 42.

-   Site id 521549, White Creek off Kent Hollow Rd, with stated lat, long of (42.2342491, -73.2149276 ) should have latitude start with 43, not 42.

-   Site id 502397, Bourn Book Little Mud Pond, with stated lat, long of (43.1402816, -73.9894409) should have longitude start with -72 rather than -73.

The table below shows the sites for which I changed latitude or longitude values (the variable names ending in "\_raw" show the data as reported; the other variables are values as adjusted).

```{r}
#| include: true
bkill2 <- bkill1 %>%
  mutate(latitude_raw=latitude,
         longitude_raw=longitude,
         # Site id 502377, White Creek Rt 153 bridge, with stated lat, long of (42.2363891,	-73.2436065) should have latitude start with 43, not 42
         # Site id 521549	White Creek off Kent Hollow Rd, with stated lat, long of (42.2342491,	-73.2149276) should have latitude start with 43, not 42
         latitude=case_when(src=="VFWD" & siteid==502377 ~ latitude_raw + 1,
                            src=="VFWD" & siteid==521549 ~ latitude_raw + 1,
                            TRUE ~ latitude_raw),
         longitude=case_when(src=="VFWD" & siteid==502397 ~ longitude_raw + 1,
                            TRUE ~ longitude_raw))

# count(bkill2 %>% filter(latitude != latitude_raw), latitude_raw, latitude)
# count(bkill2 %>% filter(longitude != longitude_raw), longitude_raw, longitude)

bkill2 %>%
  filter(latitude != latitude_raw | longitude != longitude_raw) %>%
  select(src, siteid, locdesc, latitude_raw, latitude, longitude_raw, longitude) %>%
  distinct() %>%
  arrange(siteid) %>%
  kbl() %>%
  kable_styling()

```

## Determining name of stream

The NYSDEC data have a variable (`LOCATION`) that identifies each river or stream uniquely but the VFWD data do not. (For example,

It is important to have a unique identifier for each stream because the "river miles" variable measures the number of miles from the mouth of a stream to a given site, and it is meaningless without knowing which stream it refers to.

I created a unique short identifier and a unique long identifier for each stream as follows:

-   NYSDEC: I used the identifier on the file for the short name, and defined a long name based on the location description

-   VFDW: I parsed the location description to identify each stream uniquely, and defined short and long identifiers based on the location description

I list the identifiers below.

```{r}
# count(bkill2, src)
# count(bkill2 %>% filter(src=="NYSDEC"), location, site, locdesc)
# count(bkill2 %>% filter(src=="VFWD"), locdesc)

stream_map <- read_csv("
streamid, stream
BATT, Battenkill River
BEVS, Beaver Brook       
BLKC, Black Creek        
CAMD, Camden Creek
CHNK, Chunks Brook       
FLYG, Fly Creek          
HART, Hartshorn Brook    
WBLA, West Black Creek   
WHIT, White Creek        
WHTK, Whitaker Brook
BOURN,  Bourn Brook
BRANCH,  Branch Pond Brook
BROM, Bromley Brook
FAYV, Fayville Branch 
GREEN, Green River
LYE, Lye Brook
MADTOM, Mad Tom Brook
MUNSON, Munson Brook
ROAR, Roaring Branch
TANNER, Tanner Brook
WARMB, Warm Brook
WESTBR, West Branch Battenkill
WHIT, White Creek  
")

bkill3 <- bkill2 %>%
  mutate(streamid=case_when(
    src=="NYSDEC" ~ location,
    str_detect(locdesc, "Battenkil") & # note I only use one "l" in str_detect
      !str_detect(locdesc, "West Br") ~ "BATT", # Battenkill
    str_detect(locdesc, "Bourn") ~ "BOURN",  # Bourn Brook
    str_detect(locdesc, "Branch") ~ "BRANCH",  # Branch Pond Brook
    str_detect(locdesc, "Bromley") ~ "BROM", # Bromley Brook
    str_detect(locdesc, "Fayville") ~ "FAYV", # Fayville Branch 
    str_detect(locdesc, "Green") ~ "GREEN", # Green River
    str_detect(locdesc, "Lye") ~ "LYE", # Lye Brook
    str_detect(locdesc, "Mad Tom") ~ "MADTOM", # Mad Tom Brook
    str_detect(locdesc, "Munson") ~ "MUNSON", # Munson Brook
    str_detect(locdesc, "Roaring Branch") ~ "ROAR", # Roaring Branch
    str_detect(locdesc, "Tanner Brook") ~ "TANNER", # Tanner Brook
    str_detect(locdesc, "Warm Brook") ~ "WARMB", # Warm Brook
    str_detect(locdesc, "West Br Battenkill") ~ "WESTBR", # West Branch Battenkill
    str_detect(locdesc, "White Creek") ~ "WHIT", # White Creek
    TRUE ~ NA_character_),
    stream=factor(streamid, levels=stream_map$streamid, labels=stream_map$stream)
    )

```

```{r}
#| include: true
bkill3 %>%
  select(streamid, stream) %>%
  distinct() %>%
  arrange(streamid) %>%
  kbl() %>%
  kable_styling()
```

## Adding unique site ids

I created a unique site id for each location:

-   NYS DEC sites: "NYSDEC\_" followed by BAS_LOC_RM value

-   VFWD sites: "VFWD\_" followed by the SITE ID value

```{r}
# create unique location id: for NYDEC BAS_LOC_RM, for VFWD siteid
bkill4 <- bkill3 %>%
  mutate(locid=ifelse(src=="NYSDEC", 
                      paste0("NYSDEC_", bas_loc_rm),
                      paste0("VFWD_", str_pad(siteid, width = 11, side="left", pad="0")))  # up to 6 digits
  )

check <- count(bkill4, locid)

```

## Adding state abbreviations

After adjusting latitude and longitude, all observations from the VFWD file are in Vermont. However, 4 of the 58 observations in the NYSDEC file are in Vermont. All 4 are on the Battenkill, just over the border. As a result, I added a state abbreviation to the file so that we know which state the observations are in.

Here are the 4 observations from the NYSDEC file that are in Vermont:

```{r}
#| include: true

ny_vtrecs <- c("11-BATT-34.2", "11-BATT-45.6", "11-BATT-46.1", "11-BATT-46.8")  # BAS_LOC_RM

bkill5 <- bkill4 %>%
  mutate(stabbr=case_when(src=="VFWD" ~ "VT",
                          bas_loc_rm %in% ny_vtrecs ~ "VT",
                          src=="NYSDEC" ~ "NY",
                          TRUE ~ "Error"))
# count(bkill5, src, stabbr)  

bkill5 %>%
  filter(src=="NYSDEC", stabbr=="VT") %>%
  select(src, stabbr, streamid, stream, locdesc)

```

## Cleaning Hilsenhoff's Biotic Index (HBI)

The HBI is supposed to range from 0 to 10. All of the observations in the data were in this range except for one.

The observation at site id 502390, Lye Brook Confluence, on 1990-09-28 was 26.5. Other observations near Lye Brook in the same time period (1990-1995) ranged between 1.44 and 1.92. Based on this, I assumed this was a typo, probably with the decimal in the wrong place, so I divided it by 10 giving 2.65. However, I flagged the observation as potentially bad, so that we can drop it instead of altering, if desired.

```{r}

bkill5 %>%
  ggplot(aes(date, hbi, colour=stabbr)) +
  geom_point()

bkill5 %>%
  filter(hbi > 10) %>%
  select(stabbr, siteid, locdesc, site, date, hbi, hbi_score)

bkill5 %>%
  # filter(siteid==502390) %>%
  filter(str_detect(locdesc, "Lye Brook"), year(date) < 1995) %>%
  select(stabbr, siteid, locdesc, site, date, hbi, hbi_score)

bkill6 <- bkill5 %>%
  mutate(year=year(date),
         hbiraw=hbi,
         hbi=ifelse(hbi > 20, 2.65, hbi)) # based on review of Excel file
glimpse(bkill6)


```

## Adjusted data file

I created an adjusted data file with all of the changes above and used it for all of the analysis in this document.

```{r}

bkill <- bkill6
saveRDS(bkill, here::here("data", "bkill.rds"))


```
